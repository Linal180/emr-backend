# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Attachment {
  id: String!
  type: AttachmentType!
  typeId: String!
  title: String
  key: String
  url: String
  createdAt: String!
  updatedAt: String!
}

"""The type is assigned"""
enum AttachmentType {
  PATIENT
  DOCTOR
  lab
}

type Invoice {
  id: String!
  invoiceNo: String!
  facilityId: String
  paymentTransactionId: String
  generatedBy: String
  billingType: BILLING_TYPE!
  paymentMethod: String
  status: STATUS!
  amount: String!
  createdAt: String
  updatedAt: String
  transction: Transactions
}

"""The invoice payment type"""
enum BILLING_TYPE {
  SELF_PAY
  INSURANCE
}

"""The invoice status"""
enum STATUS {
  PAID
  INSURANCE_CLAIM
  PENDING
}

type Transactions {
  id: String!
  transactionId: String!
  patientId: String!
  doctorId: String!
  facilityId: String!
  appointmentId: String!
  patient: [Patient!]
  doctor: [Doctor!]
  facility: [Facility!]
  appointment: Appointment
  createdAt: String
  updatedAt: String
  status: TRANSACTIONSTATUS!
  invoice: [Invoice!]
}

"""The transaction payment status type assigned"""
enum TRANSACTIONSTATUS {
  REFUND
  DUE
  PAID
}

type Contact {
  id: String!
  email: String
  name: String
  firstName: String
  lastName: String
  middleName: String
  suffix: String
  phone: String
  mobile: String
  pager: String
  fax: String
  address: String
  address2: String
  zipCode: String
  city: String
  state: String
  country: String
  color: String
  primaryContact: Boolean
  locationLink: String
  ssn: String
  employerName: String
  serviceCode: ServiceCodes!
  relationship: RelationshipType
  contactType: ContactType
  facilityId: String
  facility: Facility
  doctor: Doctor
  userId: String
  createdAt: String!
  updatedAt: String!
}

"""The facility service code type assigned"""
enum ServiceCodes {
  AMBULANCE_41
  AMBULANCE_42
  AMBULANCE_24
  ASSISTED_LIVING_13
  BIRTHING_CENTER_25
  COMMUNITY_MENTAL_HEALTH_CENTER_53
  COMPREHENSIVE_INPATIENT_REHABILITATION_FACILITY_61
  COMPREHENSIVE_OUTPATIENT_REHABILITATION_FACILITY_62
  CUSTODIAL_CARE_FACILITY_33
  EMERGENCY_ROOM_23
  END_STAGE_RENAL_DISEASE_TREATMENT_FACILITY_65
  FEDERALLY_QUALIFIED_HEALTH_CENTER_50
  GROUP_HOME_14
  HOMELESS_SHELTER_04
  HOSPICE_34
  INDEPENDENT_CLINIC_49
  INDEPENDENT_LABORATORY_81
  INDIAN_HEALTH_SERVICE_FREE_STANDING_FACILITY_05
  INDIAN_HEALTH_SERVICE_PROVIDER_BASED_FACILITY_06
}

"""The user's relationship assigned"""
enum RelationshipType {
  SELF
  SPOUSE
  CHILD
  CHILD_MOTHER_INSURANCE
  CHILD_FATHER_INSURANCE
  OTHER
  GRANDPARENT
  GRANDCHILD
  NEPHEW_NIECE
  FOSTHER_CHILD
  WARD
  STEPSON_STEPDAUGHTER
  STEPSON_STEPDAUGHTER_STEPMOTHER_INSRTANCE
  STEPSON_STEPDAUGHTER_STEPFATHER_INSRTANCE
  EMPLOYEE
  UNKNOWN
  HANDICAPPED_DEPENDENT
  SPONSORED_DEPENDENT
  DEPENDENT_OF_MINOR_DEPENDENT
  SIGNIFICANT_OTHER
  MOTHER
  FATHER
  EMANCIPATED_MINOR
  ORGAN_DONOR
  CADAVER_DONOR
  INJURED_PLAINTIIFF
  LIFE_PARTNER
}

"""The user's contact type assigned"""
enum ContactType {
  SELF
  EMERGENCY
  NEXT_OF_KIN
  CHILD_MOTHER_INSURANCE
  GUARDIAN
  GUARANDOR
}

type Role {
  id: String!
  role: UserRole!
  createdAt: String!
  updatedAt: String!
}

"""The user role assigned"""
enum UserRole {
  SUPER_ADMIN
  ADMIN
  DOCTOR
  DOCTOR_ASSISTANT
  NURSE_PRACTITIONER
  OFFICE_MANAGER
  PATIENT
  NURSE
  BILLING
  STAFF
}

type User {
  id: String!
  status: UserStatus!
  emailVerified: Boolean!
  email: String!
  inviteSentAt: String!
  inviteAcceptedAt: String!
  userId: String!
  token: String
  userType: String!
  facility: Facility
  roles: [Role]
  createdAt: String!
  updatedAt: String!
}

"""The user status"""
enum UserStatus {
  DEACTIVATED
  ACTIVE
}

type DoctorPatient {
  id: String!
  doctorId: String
  patientId: String
  currentProvider: Boolean
  doctor: Doctor
  createdAt: String!
  updatedAt: String!
}

type Employer {
  id: String!
  name: String
  email: String
  phone: String
  mobile: String
  industry: String
  usualOccupation: String
  createdAt: String!
  updatedAt: String!
}

type Patient {
  id: String!
  suffix: String
  email: String
  patientRecord: String
  firstName: String
  middleName: String
  lastName: String
  firstNameUsed: String
  prefferedName: String
  previousFirstName: String
  previouslastName: String
  motherMaidenName: String
  ssn: String
  gender: GENDERIDENTITY!
  dob: String
  registrationDepartment: REGDepartment!
  primaryDepartment: PrimaryDepartment!
  preferredCommunicationMethod: COMMUNICATIONTYPE!
  registrationDate: DateTime!
  deceasedDate: DateTime!
  privacyNotice: Boolean!
  phonePermission: Boolean!
  voiceCallPermission: Boolean!
  releaseOfInfoBill: Boolean!
  callToConsent: Boolean!
  medicationHistoryAuthority: Boolean!
  patientNote: String
  language: String
  pharmacy: String
  race: RACE
  ethnicity: ETHNICITY
  maritialStatus: MARITIALSTATUS
  sexualOrientation: SEXUALORIENTATION
  genderIdentity: GENDERIDENTITY
  sexAtBirth: GENDERIDENTITY
  pronouns: PRONOUNS
  homeBound: HOMEBOUND
  holdStatement: HOLDSTATEMENT
  statementDelivereOnline: Boolean!
  inviteAccepted: Boolean
  statementNote: String!
  statementNoteDateFrom: String!
  statementNoteDateTo: String!
  facilityId: String
  attachments: [Attachment!]
  contacts: [Contact!]
  facility: Facility
  user: User
  doctorPatients: [DoctorPatient!]
  employer: [Employer!]
  createdAt: String!
  updatedAt: String!
  transaction: Transactions
}

"""The patient's sexual orientation type assigned"""
enum GENDERIDENTITY {
  MALE
  FEMALE
  TRANSGENDER_MALE
  TRANSGENDER_FEMALE
  NOT_EXCLUSIVE
  NONE
}

"""The facility Registration Department type assigned type"""
enum REGDepartment {
  HOSPITAL
  LAB
  CLINIC
}

"""The facility Primary Department type assigned type"""
enum PrimaryDepartment {
  HOSPITAL
  LAB
  CLINIC
}

"""The patient's communication method assigned"""
enum COMMUNICATIONTYPE {
  PHONE
  VOICE_MESSAGE
  MESSAGE
  EMAIL
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""The user race assigned"""
enum RACE {
  WHITE
  BLACK_AFRICAN_AMERICAN
  ASIAN
  AMERICAN_INDIAN_ALASKA_NATIVE
  NATIVE_HAWAIIAN_PACIFIC_ISLANDER
  OTHER
}

"""The patient's ethnicity type assigned"""
enum ETHNICITY {
  NONE
  CENTERAL_AMERICAN
  CENTERAL_AMERICAN_INDIAN
}

"""The patient's maritial status type assigned"""
enum MARITIALSTATUS {
  SINGLE
  MARIED
  WIDOWED
  SEPARATED
  DIVORCED
}

"""The patient's sexual orientation type assigned"""
enum SEXUALORIENTATION {
  HOMOSEXUAL
  HETEROSEXUAL
  BISEXUAL
  DONT_KNOW
  NONE
}

"""The patient's pronouns type assigned"""
enum PRONOUNS {
  HE
  SHE
  NONE
}

"""The patient's homebound type assigned"""
enum HOMEBOUND {
  YES
  NO
}

"""The patient's hold statement type assigned"""
enum HOLDSTATEMENT {
  NONE
  BAD_ADDRESS
  NO_FORW_ADDRESS
  BANKRUPTCY
  CLAIM_CANCELED
  INCORRECT_GURANTOR
  PATIENT_DEASEASED
  ACCOUNT_TOO_LONG
  PRACTICE_REQUEST
}

type Practice {
  id: String!
  name: String!
  phone: String
  fax: String
  practiceId: String
  ein: String
  upin: String
  medicare: String
  medicaid: String
  champus: String
  facilities: [Facility!]
  createdAt: String
  updatedAt: String
}

type BillingAddress {
  id: String!
  email: String
  phone: String
  mobile: String
  fax: String
  address: String
  address2: String
  zipCode: String
  city: String
  state: String
  country: String
  federalTaxId: String
  bankAccount: String
  checkPayableTo: String
  facility: Facility
  doctor: Doctor
  userId: String
  createdAt: String!
  updatedAt: String!
}

type Staff {
  id: String!
  firstName: String!
  lastName: String!
  email: String!
  username: String
  dob: String
  phone: String
  primaryProvider: String
  facilityId: String
  mobile: String
  gender: Gender!
  user: User
  facility: Facility
  createdAt: String!
  updatedAt: String!
}

"""The user gender assigned"""
enum Gender {
  MALE
  FEMALE
  OTHER
}

type Schedule {
  id: String!
  startAt: String!
  endAt: String!
  recurringEndDate: DateTime
  doctor: Doctor
  scheduleServices: [ScheduleServices!]
  createdAt: String!
  updatedAt: String!
}

type ScheduleServices {
  id: String!
  serviceId: String
  scheduleId: String
  service: Service
  createdAt: String!
  updatedAt: String!
}

type Service {
  id: String!
  name: String!
  serviceType: ServiceType!
  duration: String!
  color: String
  price: String!
  isActive: Boolean
  facilityId: String
  facility: Facility
  scheduleServices: [ScheduleServices!]
  createdAt: String
  updatedAt: String
}

"""The service type assigned type"""
enum ServiceType {
  INTERNAL
  EXTERNAL
}

type Facility {
  id: String!
  name: String!
  practiceType: PracticeType
  cliaIdNumber: String
  federalTaxId: String
  isPrivate: Boolean
  isPrimary: Boolean
  color: String
  tamxonomyCode: String
  timeZone: String
  mammographyCertificationNumber: String
  npi: String
  practiceId: String
  serviceCode: ServiceCode!
  staff: [Staff!]
  doctors: [Doctor!]
  user: [User!]
  contacts: [Contact!]
  services: [Service!]
  practice: Practice
  billingAddress: [BillingAddress!]
  createdAt: String
  updatedAt: String
  transaction: Transactions
}

"""The facility practice type assigned type"""
enum PracticeType {
  HOSPITAL
  LAB
  CLINIC
}

"""The facility service code type assigned"""
enum ServiceCode {
  AMBULANCE_41
  PHARMACY_01
  TELEHEALTH_02
  TELEHEALTH_OTHER_THAN_PATIENT_HOME_02
  SCHOOL_03
  TRIBAL_07
  TRIBAL_08
  PRISON_09
  PRISON_10
  TELEHEALTH_10
  OFFICE_11
  HOME_12
  MOBILE_UNIT_15
  TEMPORARY_LoOGOING_16
  WALK_IN_RETAIL_HEALTH_CLINIC
  PLACE_OF_EMPLOYMENT_18
  OFF_CAMPUS_OUTPATIENT_HOSPITAL_19
  URGENT_CARE_20
  INPATIENT_HOSPITAL_21
  OUTPATIENT_HOSPITAL_22
  EMERGENCY_ROOM_HOSPITAL_23
  AMBULATORY_SURGICAL_CENTER_24
  MILITARY_TREATMENT_FACILITY_26
  SKILLED_NURSING_FACILITY_31
  NURSING_FACILITY_32
  AMBULANCE_LAND_41
  INPATIENT_PSYCHIATRIC_FACILITY_51
  PSYCHIATRIC_FACILITY_PARTIAL_HOSPITILIZATION_52
  INTERMEDIATE_CARE_FACILITY_MENTALLY_RETARDED_54
  RESIDENTIAL_SUBSTANCE_ABUSE_TREATMENMT_FACILITY_55
  PSYCHIATRIC_RESIDENTIAL_TREATMENT_CENTER_56
  NON_RESIDENTIAL_SUBSTANCE_ABUSE_TREATMENT_FACILITY_57
  NON_RESIDENTIAL_OPIOID_TREATMENT_FACILITY_58
  MASS_IMMUNIZATION_CENTER_60
  AMBULANCE_42
  AMBULANCE_24
  ASSISTED_LIVING_13
  BIRTHING_CENTER_25
  COMMUNITY_MENTAL_HEALTH_CENTER_53
  COMPREHENSIVE_INPATIENT_REHABILITATION_FACILITY_61
  COMPREHENSIVE_OUTPATIENT_REHABILITATION_FACILITY_62
  CUSTODIAL_CARE_FACILITY_33
  EMERGENCY_ROOM_23
  END_STAGE_RENAL_DISEASE_TREATMENT_FACILITY_65
  STATE_OR_LOCAL_PUBLIC_HEALTH_CLINIC_71
  RURAL_HEALTH_CLINIC_72
  FEDERALLY_QUALIFIED_HEALTH_CENTER_50
  GROUP_HOME_14
  HOMELESS_SHELTER_04
  HOSPICE_34
  INDEPENDENT_CLINIC_49
  INDEPENDENT_LABORATORY_81
  INDIAN_HEALTH_SERVICE_FREE_STANDING_FACILITY_05
  INDIAN_HEALTH_SERVICE_PROVIDER_BASED_FACILITY_06
}

type Appointment {
  id: String!
  isExternal: Boolean
  paymentType: PaymentType!
  status: APPOINTMENTSTATUS!
  billingStatus: BillingStatus!
  appointmentCancelReason: String
  insuranceCompany: String
  membershipID: String
  reason: String
  notes: String
  token: String
  appointmentNumber: String
  employment: Boolean
  autoAccident: Boolean
  otherAccident: Boolean
  otherPartyResponsible: Boolean
  primaryInsurance: String
  secondaryInsurance: String
  scheduleStartDateTime: String
  scheduleEndDateTime: String
  providerId: String
  patientId: String
  facilityId: String
  appointmentTypeId: String
  appointmentType: Service
  facility: Facility
  provider: Doctor
  patient: Patient
  createdAt: String
  updatedAt: String
}

"""The patient payment type assigned"""
enum PaymentType {
  SELF
  INSURANCE
}

"""The patient appointment status type assigned"""
enum APPOINTMENTSTATUS {
  CANCELLED
  INITIATED
  COMPLETED
}

"""The patient billing status assigned"""
enum BillingStatus {
  PAID
  DUE
}

type Doctor {
  id: String!
  firstName: String
  middleName: String
  lastName: String
  prefix: String
  suffix: String
  email: String
  providerIntials: String
  degreeCredentials: String
  timeZone: String
  speciality: Speciality
  dob: String
  ssn: String
  taxonomyCode: String
  deaNumber: String
  deaActiveDate: String!
  deaTermDate: String!
  languagesSpoken: String
  taxId: String
  npi: String
  upin: String
  emcProviderId: String
  billingFacility: String
  medicareGrpNumber: String
  medicaidGrpNumber: String
  meammographyCertNumber: String
  campusGrpNumber: String
  blueShildNumber: String
  taxIdStuff: String
  specialityLicense: String
  anesthesiaLicense: String
  dpsCtpNumber: String
  stateLicense: String
  licenseActiveDate: String
  licenseTermDate: String
  prescriptiveAuthNumber: String
  facilityId: String
  user: User
  facility: Facility
  contacts: [Contact!]
  billingAddress: [BillingAddress!]
  schedule: [Schedule!]
  createdAt: String!
  updatedAt: String!
  transaction: Transactions
}

"""The doctor's speciality"""
enum Speciality {
  PHYSICIAN_ASSISTANT
  PHARMACIST
  PERIODONTICS
  PEDIATRIC_DENTIST
  PEDIATRIC_DERMATOLOGY
  NEUROLOGY
  GASTROENTEROLOGY
}

type ResponsePayload {
  status: Float
  error: String
  message: String
  name: String
}

type AttachmentPayload {
  response: ResponsePayload
  attachment: Attachment
}

type AttachmentMediaPayload {
  response: ResponsePayload
  preSignedUrl: String
}

type PaginationPayload {
  page: Int
  limit: Int
  totalCount: Int
  totalPages: Int
}

type AttachmentsPayload {
  response: ResponsePayload
  attachments: [Attachment]
  pagination: PaginationPayload
}

type AccessUserPayload {
  access_token: String
  roles: [Role!]
  response: ResponsePayload
}

type ForgotPasswordPayload {
  response: ResponsePayload
}

type UserPayload {
  user: User
  response: ResponsePayload
}

type RolesPayload {
  response: ResponsePayload
  roles: [Role]
}

type UsersPayload {
  response: ResponsePayload
  users: [User]
  pagination: PaginationPayload
}

type PatientPayload {
  response: ResponsePayload
  patient: Patient
}

type PatientsPayload {
  response: ResponsePayload
  patients: [Patient]
  facilityId: String
  pagination: PaginationPayload
}

type ContactPayload {
  contact: Contact
  response: ResponsePayload
}

type ContactsPayload {
  response: ResponsePayload
  contacts: [Contact]
  pagination: PaginationPayload
}

type AllDoctorPayload {
  response: ResponsePayload
  doctors: [Doctor]
  pagination: PaginationPayload
}

type DoctorPayload {
  doctor: Doctor
  response: ResponsePayload
}

type Slots {
  startTime: String
  endTime: String
}

type DoctorSlotsPayload {
  response: ResponsePayload
  slots: [Slots!]
}

type SchedulePayload {
  schedule: Schedule
  response: ResponsePayload
}

type SchedulesPayload {
  response: ResponsePayload
  schedules: [Schedule]
  pagination: PaginationPayload
}

type AllStaffPayload {
  response: ResponsePayload
  allstaff: [Staff]
  pagination: PaginationPayload
}

type StaffPayload {
  staff: Staff
  response: ResponsePayload
}

type PracticePayload {
  response: ResponsePayload
  practice: Practice
}

type PracticesPayload {
  response: ResponsePayload
  practices: [Practice]
  pagination: PaginationPayload
}

type FacilitiesPayload {
  response: ResponsePayload
  facilities: [Facility]
  pagination: PaginationPayload
}

type FacilityPayload {
  response: ResponsePayload
  facility: Facility
}

type ServicePayload {
  response: ResponsePayload
  service: Service
}

type ServicesPayload {
  response: ResponsePayload
  services: [Service]
  pagination: PaginationPayload
}

type BraintreePayload {
  clientToken: String!
}

type TransactionPayload {
  response: ResponsePayload
  transactions: [Transactions]
  pagination: PaginationPayload
}

type AppointmentPayload {
  response: ResponsePayload
  appointment: Appointment
}

type InvoicePayload {
  response: ResponsePayload
  invoice: Invoice
}

type InvoicesPayload {
  response: ResponsePayload
  invoices: [Invoice]
  pagination: PaginationPayload
}

type AppointmentsPayload {
  response: ResponsePayload
  appointments: [Appointment]
  pagination: PaginationPayload
}

type FormElement {
  id: String!
  placeholder: String
  defaultValue: String
  required: Boolean
  errorMsg: String
  name: String!
  tableName: String
  columnName: String
  fieldId: String!
  sectionId: String!
  element: Element
  createdAt: String
  updatedAt: String
}

type Element {
  id: String!
  type: ElementType!
  createdAt: String
  updatedAt: String
}

"""The form's element types"""
enum ElementType {
  TEXT
  NUMBER
  DROPDOWN
  RADIO
  DATE
  FILE
}

type Query {
  fetchAllUsers(userInput: UsersInput!): UsersPayload!
  fetchUser: UserPayload!
  getUser(getUser: GetUser!): UserPayload!
  me: UserPayload!
  fetchAllRoles: RolesPayload!
  searchUser(search: String!): UsersPayload!
  findAllFacility(facilityInput: FacilityInput!): FacilitiesPayload!
  getFacility(getFacility: GetFacility!): FacilityPayload!
  findAllServices(serviceInput: ServiceInput!): ServicesPayload!
  getService(getService: GetService!): ServicePayload!
  findAllStaff(staffInput: StaffInput!): AllStaffPayload!
  getStaff(getStaff: GetStaff!): StaffPayload!
  findAllContacts(contactInput: ContactInput!): ContactsPayload!
  getContact(getContact: GetContact!): ContactPayload!
  findAllDoctor(doctorInput: DoctorInput!): AllDoctorPayload!
  getDoctor(getDoctor: GetDoctor!): DoctorPayload!
  findAllSchedules(scheduleInput: ScheduleInput!): SchedulesPayload!
  getSchedule(getSchedule: GetSchedule!): SchedulePayload!
  getDoctorSchedule(getDoctorSchedule: GetDoctorSchedule!): SchedulesPayload!
  getDoctorSlots(getDoctorSlots: GetDoctorSlots!): DoctorSlotsPayload!
  findAllPatient(patientInput: PatientInput!): PatientsPayload!
  getPatient(getPatient: GetPatient!): PatientPayload!
  getAttachments(getAttachment: GetAttachment!): AttachmentsPayload!
  getAttachment(getMedia: GetMedia!): AttachmentMediaPayload!
  findAllPractices(facilityInput: PracticeInput!): PracticesPayload!
  getPractice(getPractice: GetPractice!): PracticePayload!
  findAllAppointments(appointmentInput: AppointmentInput!): AppointmentsPayload!
  getAppointment(getAppointment: GetAppointment!): AppointmentPayload!
  getDoctorAppointment(getDoctorAppointment: GetDoctorAppointment!): AppointmentsPayload!
  getPatientAppointment(getPatientAppointmentInput: GetPatientAppointmentInput!): AppointmentsPayload!
  getToken: BraintreePayload!
  getAllInvoices(invoiceInput: InvoiceInputs!): InvoicesPayload!
}

input UsersInput {
  status: UserStatus
  role: UserRole
  paginationOptions: PaginationInput!
}

input PaginationInput {
  page: Int!
  limit: Int!
}

input GetUser {
  id: String!
}

input FacilityInput {
  isPrivate: Boolean
  practiceId: String
  paginationOptions: PaginationInput!
}

input GetFacility {
  id: String!
}

input ServiceInput {
  facilityId: String
  isActive: Boolean
  paginationOptions: PaginationInput!
}

input GetService {
  id: String!
}

input StaffInput {
  facilityId: String
  paginationOptions: PaginationInput!
}

input GetStaff {
  id: String!
}

input ContactInput {
  facilityId: String
  primaryContact: Boolean = false
  paginationOptions: PaginationInput!
}

input GetContact {
  id: String
}

input DoctorInput {
  facilityId: String
  paginationOptions: PaginationInput!
}

input GetDoctor {
  id: String!
}

input ScheduleInput {
  facilityId: String
  paginationOptions: PaginationInput!
}

input GetSchedule {
  id: String!
}

input GetDoctorSchedule {
  id: String!
}

input GetDoctorSlots {
  id: String!
  offset: Float!
  serviceId: String!
  currentDate: String!
}

input PatientInput {
  facilityId: String
  paginationOptions: PaginationInput!
}

input GetPatient {
  id: String!
}

input GetAttachment {
  typeId: String!
}

input GetMedia {
  id: String
}

input PracticeInput {
  paginationOptions: PaginationInput!
}

input GetPractice {
  id: String
}

input AppointmentInput {
  paginationOptions: PaginationInput!
  appointmentNumber: String
  appointmentStatus: String
  patientId: String
}

input GetAppointment {
  id: String!
}

input GetDoctorAppointment {
  doctorId: String!
}

input GetPatientAppointmentInput {
  patientId: String!
}

input InvoiceInputs {
  facilityId: String
  paginationOptions: PaginationInput!
}

type Mutation {
  login(loginUser: LoginUserInput!): AccessUserPayload!
  registerUser(user: RegisterUserInput!): UserPayload!
  forgotPassword(forgotPassword: ForgotPasswordInput!): ForgotPasswordPayload!
  verifyEmail(verifyEmail: VerifyEmailInput!): UserPayload!
  resendVerificationEmail(resendVerificationEmail: ResendVerificationEmail!): UserPayload!
  resetPassword(resetPassword: ResetPasswordInput!): UserPayload!
  updatePassword(updatePasswordInput: UpdatePasswordInput!): UserPayload!
  deactivateUser(user: UserIdInput!): UserPayload!
  removeUser(userIdInput: UserIdInput!): UserPayload!
  activateUser(user: UserIdInput!): UserPayload!
  updateUser(user: UpdateUserInput!): UserPayload!
  updateRole(user: UpdateRoleInput!): UserPayload!
  createFacility(createFacilityInput: CreateFacilityInput!): FacilityPayload!
  updateFacility(updateFacilityInput: UpdateFacilityInput!): FacilityPayload!
  updateFacilityTimeZone(updateFacilityTimeZoneInput: UpdateFacilityTimeZoneInput!): FacilityPayload!
  removeFacility(removeFacility: RemoveFacility!): FacilityPayload!
  createService(createServiceInput: CreateServiceInput!): ServicePayload!
  updateService(updateServiceInput: UpdateServiceInput!): ServicePayload!
  removeService(removeService: RemoveService!): ServicePayload!
  createStaff(createStaffInput: CreateStaffInput!): StaffPayload!
  updateStaff(updateStaffInput: UpdateStaffInput!): StaffPayload!
  removeStaff(removeStaff: RemoveStaff!): StaffPayload!
  disableStaff(disableStaff: DisableStaff!): StaffPayload!
  createContact(createContactInput: CreateContactInput!): ContactPayload!
  updateContact(updateContactInput: UpdateContactInput!): ContactPayload!
  removeContact(removeContact: RemoveContact!): ContactPayload!
  createDoctor(createDoctorInput: CreateDoctorInput!): DoctorPayload!
  updateDoctor(updateDoctorInput: UpdateDoctorInput!): DoctorPayload!
  removeDoctor(removeDoctor: RemoveDoctor!): DoctorPayload!
  disableDoctor(disableDoctor: DisableDoctor!): DoctorPayload!
  createSchedule(createScheduleInput: CreateScheduleInput!): SchedulePayload!
  updateSchedule(updateScheduleInput: UpdateScheduleInput!): SchedulePayload!
  removeSchedule(removeSchedule: RemoveSchedule!): SchedulePayload!
  createPatient(createPatientInput: CreatePatientInput!): PatientPayload!
  patientInfo(patientInfoInput: PatientInfoInput!): PatientPayload!
  updatePatient(updatePatientInput: UpdatePatientInput!): PatientPayload!
  updatePatientProfile(updatePatientProfileInput: UpdatePatientProfileInput!): PatientPayload!
  sendInviteToPatient(patientInviteInput: PatientInviteInput!): PatientPayload!
  updatePatientProvider(updatePatientProvider: UpdatePatientProvider!): PatientPayload!
  removePatient(removePatient: RemovePatient!): PatientPayload!
  createAttachmentData(createAttachmentInput: CreateAttachmentInput!): AttachmentPayload!
  removeAttachmentData(removeAttachment: RemoveAttachment!): AttachmentPayload!
  updateAttachmentData(updateAttachmentInput: UpdateAttachmentInput!): AttachmentPayload!
  createPractice(createPracticeInput: CreatePracticeInput!): PracticePayload!
  updatePractice(updatePracticeInput: UpdatePracticeInput!): PracticePayload!
  removePractice(removePractice: RemovePractice!): PracticePayload!
  createAppointment(createAppointmentInput: CreateAppointmentInput!): AppointmentPayload!
  createExternalAppointment(createExternalAppointmentInput: CreateExternalAppointmentInput!): AppointmentPayload!
  updateAppointment(updateAppointmentInput: UpdateAppointmentInput!): AppointmentPayload!
  updateAppointmentBillingStatus(updateAppointmentBillingStatusInput: UpdateAppointmentBillingStatusInput!): AppointmentPayload!
  removeAppointment(removeAppointment: RemoveAppointment!): AppointmentPayload!
  cancelAppointment(cancelAppointment: CancelAppointment!): AppointmentPayload!
  chargePayment(paymentInput: PaymentInput!): AppointmentPayload!
  chargeAfterAppointment(paymentInput: PaymentInputsAfterAppointment!): AppointmentPayload!
  getAllTransactions(transactionInputs: GetAllTransactionsInputs!): TransactionPayload!
  createInvoice(createInvoiceInputs: CreateInvoiceInputs!): InvoicePayload!
  createExternalInvoice(createExternalInvoiceInputs: CreateExternalInvoiceInputs!): InvoicePayload!
  updateInvoiceStatus(invoiceStatusInputs: InvoiceStatusInputs!): InvoicePayload!
}

input LoginUserInput {
  email: String!
  password: String!
}

input RegisterUserInput {
  firstName: String
  lastName: String
  password: String!
  email: String!

  """Send Investor Type from the ENUM - Sign-up"""
  roleType: UserRole
  adminId: String
  facilityId: String
  phone: String
  zipCode: String
  isAdmin: Boolean
}

input ForgotPasswordInput {
  email: String!
}

input VerifyEmailInput {
  token: String!
}

input ResendVerificationEmail {
  email: String
}

input ResetPasswordInput {
  password: String!
  token: String!
}

input UpdatePasswordInput {
  id: String!
  newPassword: String!
  oldPassword: String!
}

input UserIdInput {
  userId: String!
  adminId: String
  isEnabled: Boolean
}

input UpdateUserInput {
  firstName: String
  lastName: String
  email: String
  adminId: String
  facilityId: String
  phone: String
  zipCode: String
  isAdmin: Boolean
  id: String!
  emailVerified: Boolean
}

input UpdateRoleInput {
  id: String!
  roles: [UserRole!]!
}

input CreateFacilityInput {
  createFacilityItemInput: CreateFacilityItemInput!
  createContactInput: CreateContactInput!
  createBillingAddressInput: CreateBillingAddressInput!
}

input CreateFacilityItemInput {
  name: String!
  stateImmunizationId: String

  """Facility type"""
  practiceType: PracticeType

  """Service Code type"""
  serviceCode: ServiceCode
  cliaIdNumber: String
  timeZone: String
  practiceId: String
  federalTaxId: String
  color: String
  tamxonomyCode: String
  mammographyCertificationNumber: String
  npi: String
}

input CreateContactInput {
  name: String
  firstName: String
  lastName: String
  middleName: String
  email: String
  contactType: ContactType
  relationship: RelationshipType
  serviceCode: ServiceCodes
  pager: String
  phone: String
  suffix: String
  mobile: String
  fax: String
  color: String
  ssn: String
  primaryContact: Boolean = true
  address: String
  address2: String
  locationLink: String
  zipCode: String
  city: String
  state: String
  country: String
  userId: String
  doctorId: String
  facilityId: String
  patientId: String
  employerName: String
}

input CreateBillingAddressInput {
  email: String!
  pager: String
  phone: String
  mobile: String
  fax: String
  address: String
  address2: String
  zipCode: String
  city: String
  state: String
  country: String
  bankAccount: String
  checkPayableTo: String
  userId: String
  doctorId: String
  facilityId: String
}

input UpdateFacilityInput {
  updateFacilityItemInput: UpdateFacilityItemInput!
  updateContactInput: UpdateContactInput!
  updateBillingAddressInput: UpdateBillingAddressInput!
}

input UpdateFacilityItemInput {
  name: String
  stateImmunizationId: String

  """Facility type"""
  practiceType: PracticeType

  """Service Code type"""
  serviceCode: ServiceCode
  cliaIdNumber: String
  timeZone: String
  practiceId: String
  federalTaxId: String
  color: String
  tamxonomyCode: String
  mammographyCertificationNumber: String
  npi: String
  id: String!
}

input UpdateContactInput {
  name: String
  firstName: String
  lastName: String
  middleName: String
  email: String
  contactType: ContactType
  relationship: RelationshipType
  serviceCode: ServiceCodes
  pager: String
  phone: String
  suffix: String
  mobile: String
  fax: String
  color: String
  ssn: String
  primaryContact: Boolean = true
  address: String
  address2: String
  locationLink: String
  zipCode: String
  city: String
  state: String
  country: String
  userId: String
  doctorId: String
  facilityId: String
  patientId: String
  employerName: String
  id: String
}

input UpdateBillingAddressInput {
  email: String
  pager: String
  phone: String
  mobile: String
  fax: String
  address: String
  address2: String
  zipCode: String
  city: String
  state: String
  country: String
  bankAccount: String
  checkPayableTo: String
  userId: String
  doctorId: String
  facilityId: String
  id: String
}

input UpdateFacilityTimeZoneInput {
  id: String!
  timeZone: String
}

input RemoveFacility {
  id: String!
}

input CreateServiceInput {
  name: String!
  duration: String!
  price: String!
  color: String!
  facilityId: String!
  isActive: Boolean

  """Service type"""
  serviceType: ServiceType
}

input UpdateServiceInput {
  name: String
  duration: String
  price: String
  color: String
  facilityId: String
  isActive: Boolean

  """Service type"""
  serviceType: ServiceType
  id: String!
}

input RemoveService {
  id: String!
}

input CreateStaffInput {
  firstName: String!
  lastName: String!
  email: String!
  username: String!
  password: String!
  phone: String
  primaryProvider: String
  mobile: String
  dob: String

  """Staff gender"""
  gender: Gender

  """Send Investor Type from the ENUM - Sign-up"""
  roleType: UserRole
  adminId: String
  facilityId: String
}

input UpdateStaffInput {
  firstName: String
  lastName: String
  email: String
  username: String
  password: String
  phone: String
  primaryProvider: String
  mobile: String
  dob: String

  """Staff gender"""
  gender: Gender

  """Send Investor Type from the ENUM - Sign-up"""
  roleType: UserRole
  adminId: String
  facilityId: String
  id: String!
}

input RemoveStaff {
  id: String!
}

input DisableStaff {
  id: String!
}

input RemoveContact {
  id: String
}

input CreateDoctorInput {
  createDoctorItemInput: CreateDoctorItemInput!
  createContactInput: CreateContactInput!
  createBillingAddressInput: CreateBillingAddressInput!
}

input CreateDoctorItemInput {
  firstName: String!
  middleName: String!
  lastName: String!
  prefix: String
  suffix: String
  email: String!
  password: String

  """Send doctor Type from the ENUM - Sign-up"""
  roleType: UserRole
  adminId: String
  timeZone: String
  facilityId: String!
  providerIntials: String
  degreeCredentials: String

  """Doctor speciality"""
  speciality: Speciality
  dob: String
  ssn: String
  taxonomyCode: String
  deaNumber: String
  deaActiveDate: String
  deaTermDate: String
  languagesSpoken: String
  taxId: String
  npi: String
  upin: String
  emcProviderId: String
  billingFacility: String
  medicareGrpNumber: String
  medicaidGrpNumber: String
  meammographyCertNumber: String
  campusGrpNumber: String
  blueShildNumber: String
  taxIdStuff: String
  specialityLicense: String
  anesthesiaLicense: String
  dpsCtpNumber: String
  stateLicense: String
  licenseActiveDate: String
  licenseTermDate: String
  prescriptiveAuthNumber: String
}

input UpdateDoctorInput {
  updateDoctorItemInput: UpdateDoctorItemInput!
  updateContactInput: UpdateContactInput!
  updateBillingAddressInput: UpdateBillingAddressInput!
}

input UpdateDoctorItemInput {
  firstName: String
  middleName: String
  lastName: String
  prefix: String
  suffix: String
  email: String
  password: String

  """Send doctor Type from the ENUM - Sign-up"""
  roleType: UserRole
  adminId: String
  timeZone: String
  facilityId: String
  providerIntials: String
  degreeCredentials: String

  """Doctor speciality"""
  speciality: Speciality
  dob: String
  ssn: String
  taxonomyCode: String
  deaNumber: String
  deaActiveDate: String
  deaTermDate: String
  languagesSpoken: String
  taxId: String
  npi: String
  upin: String
  emcProviderId: String
  billingFacility: String
  medicareGrpNumber: String
  medicaidGrpNumber: String
  meammographyCertNumber: String
  campusGrpNumber: String
  blueShildNumber: String
  taxIdStuff: String
  specialityLicense: String
  anesthesiaLicense: String
  dpsCtpNumber: String
  stateLicense: String
  licenseActiveDate: String
  licenseTermDate: String
  prescriptiveAuthNumber: String
  id: String!
}

input RemoveDoctor {
  id: String!
}

input DisableDoctor {
  id: String!
}

input CreateScheduleInput {
  startAt: String!
  endAt: String!
  recurringEndDate: DateTime
  doctorId: String!
  servicesIds: [String!]!
}

input UpdateScheduleInput {
  startAt: String
  endAt: String
  recurringEndDate: DateTime
  doctorId: String
  servicesIds: [String!]
  id: String!
}

input RemoveSchedule {
  id: String!
}

input CreatePatientInput {
  createPatientItemInput: CreatePatientItemInput!
  createContactInput: CreateContactInput!
  createEmergencyContactInput: CreateContactInput!
  createNextOfKinContactInput: CreateContactInput!
  createGuardianContactInput: CreateContactInput!
  createGuarantorContactInput: CreateContactInput!
  createEmployerInput: CreateEmployerInput!
}

input CreatePatientItemInput {
  suffix: String
  email: String
  firstName: String
  patientRecord: String
  middleName: String
  lastName: String
  firstNameUsed: String
  prefferedName: String
  previousFirstName: String
  pharmacy: String
  usualProviderId: String
  previouslastName: String
  motherMaidenName: String
  ssn: String
  dob: String
  gender: GENDERIDENTITY
  registrationDepartment: REGDepartment
  primaryDepartment: PrimaryDepartment
  registrationDate: String
  deceasedDate: String
  privacyNotice: Boolean
  releaseOfInfoBill: Boolean
  callToConsent: Boolean
  inviteAccepted: Boolean
  voiceCallPermission: Boolean
  phonePermission: Boolean
  medicationHistoryAuthority: Boolean
  patientNote: String
  language: String
  preferredCommunicationMethod: COMMUNICATIONTYPE
  race: RACE
  ethnicity: ETHNICITY
  maritialStatus: MARITIALSTATUS
  sexualOrientation: SEXUALORIENTATION
  genderIdentity: GENDERIDENTITY
  sexAtBirth: GENDERIDENTITY
  pronouns: PRONOUNS
  homeBound: HOMEBOUND
  holdStatement: HOLDSTATEMENT
  statementDelivereOnline: Boolean
  statementNote: String
  statementNoteDateFrom: String
  statementNoteDateTo: String
  adminId: String
  facilityId: String!
}

input CreateEmployerInput {
  name: String
  email: String
  phone: String
  mobile: String
  industry: String
  usualOccupation: String
  patientId: String
}

input PatientInfoInput {
  patientInfoItemInput: PatientInfoItemInput!
  createContactInput: CreateContactInput!
  createEmergencyContactInput: CreateContactInput!
}

input PatientInfoItemInput {
  pharmacy: String
  ssn: String
  voiceCallPermission: Boolean
  phonePermission: Boolean
  language: String
  preferredCommunicationMethod: COMMUNICATIONTYPE
  race: RACE
  ethnicity: ETHNICITY
  maritialStatus: MARITIALSTATUS
  id: String!
}

input UpdatePatientInput {
  updatePatientItemInput: UpdatePatientItemInput!
  updateContactInput: UpdateContactInput!
  updateEmergencyContactInput: UpdateContactInput!
  updateNextOfKinContactInput: UpdateContactInput!
  updateGuardianContactInput: UpdateContactInput!
  updateGuarantorContactInput: UpdateContactInput!
  updateEmployerInput: UpdateEmployerItemInput!
}

input UpdatePatientItemInput {
  suffix: String
  email: String
  firstName: String
  patientRecord: String
  middleName: String
  lastName: String
  firstNameUsed: String
  prefferedName: String
  previousFirstName: String
  pharmacy: String
  usualProviderId: String
  previouslastName: String
  motherMaidenName: String
  ssn: String
  dob: String
  gender: GENDERIDENTITY
  registrationDepartment: REGDepartment
  primaryDepartment: PrimaryDepartment
  registrationDate: String
  deceasedDate: String
  privacyNotice: Boolean
  releaseOfInfoBill: Boolean
  callToConsent: Boolean
  inviteAccepted: Boolean
  voiceCallPermission: Boolean
  phonePermission: Boolean
  medicationHistoryAuthority: Boolean
  patientNote: String
  language: String
  preferredCommunicationMethod: COMMUNICATIONTYPE
  race: RACE
  ethnicity: ETHNICITY
  maritialStatus: MARITIALSTATUS
  sexualOrientation: SEXUALORIENTATION
  genderIdentity: GENDERIDENTITY
  sexAtBirth: GENDERIDENTITY
  pronouns: PRONOUNS
  homeBound: HOMEBOUND
  holdStatement: HOLDSTATEMENT
  statementDelivereOnline: Boolean
  statementNote: String
  statementNoteDateFrom: String
  statementNoteDateTo: String
  adminId: String
  facilityId: String
  id: String!
}

input UpdateEmployerItemInput {
  name: String
  email: String
  phone: String
  mobile: String
  industry: String
  usualOccupation: String
  patientId: String
  id: String
}

input UpdatePatientProfileInput {
  updatePatientProfileItemInput: UpdatePatientProfileItemInput!
  updateContactInput: UpdateContactInput!
}

input UpdatePatientProfileItemInput {
  firstName: String
  lastName: String
  id: String!
}

input PatientInviteInput {
  id: String!
  adminId: String!
}

input UpdatePatientProvider {
  patientId: String!
  providerId: String!
}

input RemovePatient {
  id: String!
}

input CreateAttachmentInput {
  """enum type for module type - Upload Media"""
  type: AttachmentType!
  typeId: String!
  title: String
  subTitle: String
  description: String
  url: String
}

input RemoveAttachment {
  id: String
}

input UpdateAttachmentInput {
  """enum type for module type - Upload Media"""
  type: AttachmentType
  typeId: String
  title: String
  subTitle: String
  description: String
  url: String
  id: String
}

input CreatePracticeInput {
  createFacilityItemInput: CreateFacilityItemInput
  createContactInput: CreateContactInput
  registerUserInput: RegisterUserInput
  createPracticeItemInput: CreatePracticeItemInput
}

input CreatePracticeItemInput {
  name: String
  phone: String
  fax: String
  ein: String
  upin: String
  medicare: String
  medicaid: String
  champus: String
}

input UpdatePracticeInput {
  name: String
  phone: String
  fax: String
  ein: String
  upin: String
  medicare: String
  medicaid: String
  champus: String
  id: String
}

input RemovePractice {
  id: String
}

input CreateAppointmentInput {
  paymentType: PaymentType!
  billingStatus: BillingStatus!
  insuranceCompany: String
  membershipID: String
  reason: String
  notes: String
  employment: Boolean
  autoAccident: Boolean
  otherAccident: Boolean
  otherPartyResponsible: Boolean
  primaryInsurance: String
  secondaryInsurance: String
  scheduleStartDateTime: String!
  scheduleEndDateTime: String!
  serviceId: String!
  facilityId: String!
  providerId: String!
  patientId: String
}

input CreateExternalAppointmentInput {
  createExternalAppointmentItemInput: CreateExternalAppointmentItemInput!
  createPatientItemInput: CreatePatientItemInput!
  createGuardianContactInput: CreateContactInput!
}

input CreateExternalAppointmentItemInput {
  isExternal: Boolean
  paymentType: PaymentType!
  billingStatus: BillingStatus!
  insuranceCompany: String
  membershipID: String
  scheduleStartDateTime: String!
  scheduleEndDateTime: String!
  serviceId: String!
  facilityId: String!
  providerId: String!
  patientId: String
  paymentStatus: String
}

input UpdateAppointmentInput {
  paymentType: PaymentType
  billingStatus: BillingStatus
  insuranceCompany: String
  membershipID: String
  reason: String
  notes: String
  employment: Boolean
  autoAccident: Boolean
  otherAccident: Boolean
  otherPartyResponsible: Boolean
  primaryInsurance: String
  secondaryInsurance: String
  scheduleStartDateTime: String
  scheduleEndDateTime: String
  serviceId: String
  facilityId: String
  providerId: String
  patientId: String
  id: String!
  paymentStatus: String
}

input UpdateAppointmentBillingStatusInput {
  id: String!
  billingStatus: String!
}

input RemoveAppointment {
  id: String!
}

input CancelAppointment {
  token: String!
  reason: String!
}

input PaymentInput {
  createExternalAppointmentItemInput: CreateExternalAppointmentItemInput!
  createPatientItemInput: CreatePatientItemInput!
  createGuardianContactInput: CreateContactInput!
  clientIntent: String!
  client: String!
}

input PaymentInputsAfterAppointment {
  clientIntent: String!
  price: String!
  providerId: String!
  facilityId: String!
  patientId: String!
  appointmentId: String!
}

input GetAllTransactionsInputs {
  facilityId: String
  paginationOptions: PaginationInput!
}

input CreateInvoiceInputs {
  paymentTransactionId: String
  facilityId: String!
  generatedBy: String
  billingType: BILLING_TYPE!
  paymentMethod: String
  status: STATUS!
  amount: String!
}

input CreateExternalInvoiceInputs {
  paymentTransactionId: String!
  facilityId: String!
  generatedBy: String
  billingType: BILLING_TYPE!
  paymentMethod: String!
  status: STATUS!
  amount: String!
}

input InvoiceStatusInputs {
  status: STATUS!
  id: String!
}
